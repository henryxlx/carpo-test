group = 'com.genghis'
version = '0.0.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

repositories {
//    maven { url 'http://localhost:8081/nexus/content/groups/public' }
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

ext {
    springVersion = '4.3.2.RELEASE'
    junitVersion = '4.12'
}


dependencies {
    testCompile("junit:junit:$junitVersion")
    testCompile("org.mockito:mockito-core:2.21.0") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
    }
    compile("org.slf4j:slf4j-api:1.7.25")
    compile("org.mybatis:mybatis:3.3.1")
    compile("org.mybatis:mybatis-spring:1.2.5")
    compile("org.springframework:spring-context:$springVersion")
    compile("org.springframework:spring-orm:$springVersion")
    compile("org.springframework:spring-test:$springVersion")
    compile("org.apache.tomcat:tomcat-jdbc:7.0.52")
    compile("mysql:mysql-connector-java:5.0.8")
    compile("ch.qos.logback:logback-classic:1.0.13")
    compile("junit:junit:$junitVersion")
//    providedRuntime("mysql:mysql-connector-java:5.0.8")
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            //指定group/artifact/version信息，可以不填。默认使用项目group/name/version作为groupId/artifactId/version
            groupId project.group
            artifactId project.name
            version project.version
            //如果是war包填写components.web，如果是jar包填写components.java
            from components.java

            //配置上传源码
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
    repositories {
        maven {
            //指定要上传的maven私服仓库
            def releasesRepoUrl = "http://localhost:8081/nexus/content/repositories/public/"
            def snapshotsRepoUrl = "http://localhost:8081/nexus/content/repositories/carpo-dev-snap/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            //认证用户和密码
            credentials {
                username 'admin'
                password 'admin123'
            }
        }
    }
}